// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.151.1.0.1.27  $
// File generated on 2006/7/11 ¤U¤È 08:47:59 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\WINDOWS\system32\hwinterface.ocx (1)
// LIBID: {BD6BB71B-5C9A-4FB3-877E-8B513D28B951}
// LCID: 0
// Helpfile: C:\WINDOWS\system32\hwinterface.hlp
// HelpString: hwinterface ActiveX Control module
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINDOWS\system32\Stdole2.tlb)
// ************************************************************************ //
#ifndef   HWINTERFACELib_OCXH
#define   HWINTERFACELib_OCXH

#pragma option push -b -w-inl

#include <olectrls.hpp>
#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0600)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "HWINTERFACELib_TLB.h"
namespace Hwinterfacelib_tlb
{

// *********************************************************************//
// HelpString: hwinterface ActiveX Control module
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : THwinterface
// Help String      : Hwinterface Control
// Default Interface: _DHwinterface
// Def. Intf. Object: _DHwinterfaceDisp
// Def. Intf. DISP? : Yes
// Event   Interface: _DHwinterfaceEvents
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host Hwinterface Control in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE THwinterface : public TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //

  // Default Interace of OCX
  //
  _DHwinterfaceDisp m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //

  // Static variables used by all instances of OCX proxy
  //
  static TControlData CControlData;
  static GUID         CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  _DHwinterfaceDisp __fastcall GetDefaultInterface();
  _DHwinterfaceDisp __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall THwinterface(TComponent* AOwner) : TOleControl(AOwner)
  {};
  virtual  __fastcall THwinterface(HWND        Parent) : TOleControl(Parent)
  {};

  // OCX methods
  //
  short           __fastcall InPort(short Address);
  void            __fastcall OutPort(short Address, short Data);
  void            __fastcall AboutBox(void);

  // OCX properties
  //
  __property _DHwinterfaceDisp ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //

  // OCX properties
  //

  // OCX Events
  //
};
typedef THwinterface  THwinterfaceProxy;

};     // namespace Hwinterfacelib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Hwinterfacelib_tlb;
#endif

#pragma option pop

#endif // HWINTERFACELib_OCXH
